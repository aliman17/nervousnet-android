package ch.ethz.coss.nervousnet.vm.model;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table "GYRO_DATA".
 */
public class GyroData implements SensorDataImpl {

    private long TimeStamp;
    private Float GyroX;
    private Float GyroY;
    private Float GyroZ;
    private long Volatility;
    private Boolean ShareFlag;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public GyroData() {
    }

    public GyroData(long TimeStamp) {
        this.TimeStamp = TimeStamp;
    }

    public GyroData(long TimeStamp, Float GyroX, Float GyroY, Float GyroZ, long Volatility, Boolean ShareFlag) {
        this.TimeStamp = TimeStamp;
        this.GyroX = GyroX;
        this.GyroY = GyroY;
        this.GyroZ = GyroZ;
        this.Volatility = Volatility;
        this.ShareFlag = ShareFlag;
    }

    public long getTimeStamp() {
        return TimeStamp;
    }

    public void setTimeStamp(long TimeStamp) {
        this.TimeStamp = TimeStamp;
    }

    public Float getGyroX() {
        return GyroX;
    }

    public void setGyroX(Float GyroX) {
        this.GyroX = GyroX;
    }

    public Float getGyroY() {
        return GyroY;
    }

    public void setGyroY(Float GyroY) {
        this.GyroY = GyroY;
    }

    public Float getGyroZ() {
        return GyroZ;
    }

    public void setGyroZ(Float GyroZ) {
        this.GyroZ = GyroZ;
    }

    public long getVolatility() {
        return Volatility;
    }

    public void setVolatility(long Volatility) {
        this.Volatility = Volatility;
    }

    public Boolean getShareFlag() {
        return ShareFlag;
    }

    public void setShareFlag(Boolean ShareFlag) {
        this.ShareFlag = ShareFlag;
    }

    // KEEP METHODS - put your custom methods here
	@Override
	  public Integer getType() {
      return Type;
  }
	
	@Override
  public void setType(Integer Type) {
      this.Type = Type;
  }
    // KEEP METHODS END

}
