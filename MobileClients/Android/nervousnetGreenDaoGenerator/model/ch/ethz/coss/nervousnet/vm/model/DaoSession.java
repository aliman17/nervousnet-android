package ch.ethz.coss.nervousnet.vm.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import ch.ethz.coss.nervousnet.vm.model.Config;
import ch.ethz.coss.nervousnet.vm.model.SensorReading;
import ch.ethz.coss.nervousnet.vm.model.LocationReading;
import ch.ethz.coss.nervousnet.vm.model.AccelReading;
import ch.ethz.coss.nervousnet.vm.model.BatteryReading;
import ch.ethz.coss.nervousnet.vm.model.BeaconReading;
import ch.ethz.coss.nervousnet.vm.model.ConnectivityReading;
import ch.ethz.coss.nervousnet.vm.model.GyroReading;
import ch.ethz.coss.nervousnet.vm.model.HumidityReading;
import ch.ethz.coss.nervousnet.vm.model.LightReading;
import ch.ethz.coss.nervousnet.vm.model.MagneticReading;
import ch.ethz.coss.nervousnet.vm.model.NoiseReading;
import ch.ethz.coss.nervousnet.vm.model.PressureReading;
import ch.ethz.coss.nervousnet.vm.model.ProximityReading;
import ch.ethz.coss.nervousnet.vm.model.TemperatureReading;
import ch.ethz.coss.nervousnet.vm.model.Packet;

import ch.ethz.coss.nervousnet.vm.model.ConfigDao;
import ch.ethz.coss.nervousnet.vm.model.SensorReadingDao;
import ch.ethz.coss.nervousnet.vm.model.LocationReadingDao;
import ch.ethz.coss.nervousnet.vm.model.AccelReadingDao;
import ch.ethz.coss.nervousnet.vm.model.BatteryReadingDao;
import ch.ethz.coss.nervousnet.vm.model.BeaconReadingDao;
import ch.ethz.coss.nervousnet.vm.model.ConnectivityReadingDao;
import ch.ethz.coss.nervousnet.vm.model.GyroReadingDao;
import ch.ethz.coss.nervousnet.vm.model.HumidityReadingDao;
import ch.ethz.coss.nervousnet.vm.model.LightReadingDao;
import ch.ethz.coss.nervousnet.vm.model.MagneticReadingDao;
import ch.ethz.coss.nervousnet.vm.model.NoiseReadingDao;
import ch.ethz.coss.nervousnet.vm.model.PressureReadingDao;
import ch.ethz.coss.nervousnet.vm.model.ProximityReadingDao;
import ch.ethz.coss.nervousnet.vm.model.TemperatureReadingDao;
import ch.ethz.coss.nervousnet.vm.model.PacketDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig configDaoConfig;
    private final DaoConfig sensorReadingDaoConfig;
    private final DaoConfig locationReadingDaoConfig;
    private final DaoConfig accelReadingDaoConfig;
    private final DaoConfig batteryReadingDaoConfig;
    private final DaoConfig beaconReadingDaoConfig;
    private final DaoConfig connectivityReadingDaoConfig;
    private final DaoConfig gyroReadingDaoConfig;
    private final DaoConfig humidityReadingDaoConfig;
    private final DaoConfig lightReadingDaoConfig;
    private final DaoConfig magneticReadingDaoConfig;
    private final DaoConfig noiseReadingDaoConfig;
    private final DaoConfig pressureReadingDaoConfig;
    private final DaoConfig proximityReadingDaoConfig;
    private final DaoConfig temperatureReadingDaoConfig;
    private final DaoConfig packetDaoConfig;

    private final ConfigDao configDao;
    private final SensorReadingDao sensorReadingDao;
    private final LocationReadingDao locationReadingDao;
    private final AccelReadingDao accelReadingDao;
    private final BatteryReadingDao batteryReadingDao;
    private final BeaconReadingDao beaconReadingDao;
    private final ConnectivityReadingDao connectivityReadingDao;
    private final GyroReadingDao gyroReadingDao;
    private final HumidityReadingDao humidityReadingDao;
    private final LightReadingDao lightReadingDao;
    private final MagneticReadingDao magneticReadingDao;
    private final NoiseReadingDao noiseReadingDao;
    private final PressureReadingDao pressureReadingDao;
    private final ProximityReadingDao proximityReadingDao;
    private final TemperatureReadingDao temperatureReadingDao;
    private final PacketDao packetDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        configDaoConfig = daoConfigMap.get(ConfigDao.class).clone();
        configDaoConfig.initIdentityScope(type);

        sensorReadingDaoConfig = daoConfigMap.get(SensorReadingDao.class).clone();
        sensorReadingDaoConfig.initIdentityScope(type);

        locationReadingDaoConfig = daoConfigMap.get(LocationReadingDao.class).clone();
        locationReadingDaoConfig.initIdentityScope(type);

        accelReadingDaoConfig = daoConfigMap.get(AccelReadingDao.class).clone();
        accelReadingDaoConfig.initIdentityScope(type);

        batteryReadingDaoConfig = daoConfigMap.get(BatteryReadingDao.class).clone();
        batteryReadingDaoConfig.initIdentityScope(type);

        beaconReadingDaoConfig = daoConfigMap.get(BeaconReadingDao.class).clone();
        beaconReadingDaoConfig.initIdentityScope(type);

        connectivityReadingDaoConfig = daoConfigMap.get(ConnectivityReadingDao.class).clone();
        connectivityReadingDaoConfig.initIdentityScope(type);

        gyroReadingDaoConfig = daoConfigMap.get(GyroReadingDao.class).clone();
        gyroReadingDaoConfig.initIdentityScope(type);

        humidityReadingDaoConfig = daoConfigMap.get(HumidityReadingDao.class).clone();
        humidityReadingDaoConfig.initIdentityScope(type);

        lightReadingDaoConfig = daoConfigMap.get(LightReadingDao.class).clone();
        lightReadingDaoConfig.initIdentityScope(type);

        magneticReadingDaoConfig = daoConfigMap.get(MagneticReadingDao.class).clone();
        magneticReadingDaoConfig.initIdentityScope(type);

        noiseReadingDaoConfig = daoConfigMap.get(NoiseReadingDao.class).clone();
        noiseReadingDaoConfig.initIdentityScope(type);

        pressureReadingDaoConfig = daoConfigMap.get(PressureReadingDao.class).clone();
        pressureReadingDaoConfig.initIdentityScope(type);

        proximityReadingDaoConfig = daoConfigMap.get(ProximityReadingDao.class).clone();
        proximityReadingDaoConfig.initIdentityScope(type);

        temperatureReadingDaoConfig = daoConfigMap.get(TemperatureReadingDao.class).clone();
        temperatureReadingDaoConfig.initIdentityScope(type);

        packetDaoConfig = daoConfigMap.get(PacketDao.class).clone();
        packetDaoConfig.initIdentityScope(type);

        configDao = new ConfigDao(configDaoConfig, this);
        sensorReadingDao = new SensorReadingDao(sensorReadingDaoConfig, this);
        locationReadingDao = new LocationReadingDao(locationReadingDaoConfig, this);
        accelReadingDao = new AccelReadingDao(accelReadingDaoConfig, this);
        batteryReadingDao = new BatteryReadingDao(batteryReadingDaoConfig, this);
        beaconReadingDao = new BeaconReadingDao(beaconReadingDaoConfig, this);
        connectivityReadingDao = new ConnectivityReadingDao(connectivityReadingDaoConfig, this);
        gyroReadingDao = new GyroReadingDao(gyroReadingDaoConfig, this);
        humidityReadingDao = new HumidityReadingDao(humidityReadingDaoConfig, this);
        lightReadingDao = new LightReadingDao(lightReadingDaoConfig, this);
        magneticReadingDao = new MagneticReadingDao(magneticReadingDaoConfig, this);
        noiseReadingDao = new NoiseReadingDao(noiseReadingDaoConfig, this);
        pressureReadingDao = new PressureReadingDao(pressureReadingDaoConfig, this);
        proximityReadingDao = new ProximityReadingDao(proximityReadingDaoConfig, this);
        temperatureReadingDao = new TemperatureReadingDao(temperatureReadingDaoConfig, this);
        packetDao = new PacketDao(packetDaoConfig, this);

        registerDao(Config.class, configDao);
        registerDao(SensorReading.class, sensorReadingDao);
        registerDao(LocationReading.class, locationReadingDao);
        registerDao(AccelReading.class, accelReadingDao);
        registerDao(BatteryReading.class, batteryReadingDao);
        registerDao(BeaconReading.class, beaconReadingDao);
        registerDao(ConnectivityReading.class, connectivityReadingDao);
        registerDao(GyroReading.class, gyroReadingDao);
        registerDao(HumidityReading.class, humidityReadingDao);
        registerDao(LightReading.class, lightReadingDao);
        registerDao(MagneticReading.class, magneticReadingDao);
        registerDao(NoiseReading.class, noiseReadingDao);
        registerDao(PressureReading.class, pressureReadingDao);
        registerDao(ProximityReading.class, proximityReadingDao);
        registerDao(TemperatureReading.class, temperatureReadingDao);
        registerDao(Packet.class, packetDao);
    }
    
    public void clear() {
        configDaoConfig.getIdentityScope().clear();
        sensorReadingDaoConfig.getIdentityScope().clear();
        locationReadingDaoConfig.getIdentityScope().clear();
        accelReadingDaoConfig.getIdentityScope().clear();
        batteryReadingDaoConfig.getIdentityScope().clear();
        beaconReadingDaoConfig.getIdentityScope().clear();
        connectivityReadingDaoConfig.getIdentityScope().clear();
        gyroReadingDaoConfig.getIdentityScope().clear();
        humidityReadingDaoConfig.getIdentityScope().clear();
        lightReadingDaoConfig.getIdentityScope().clear();
        magneticReadingDaoConfig.getIdentityScope().clear();
        noiseReadingDaoConfig.getIdentityScope().clear();
        pressureReadingDaoConfig.getIdentityScope().clear();
        proximityReadingDaoConfig.getIdentityScope().clear();
        temperatureReadingDaoConfig.getIdentityScope().clear();
        packetDaoConfig.getIdentityScope().clear();
    }

    public ConfigDao getConfigDao() {
        return configDao;
    }

    public SensorReadingDao getSensorReadingDao() {
        return sensorReadingDao;
    }

    public LocationReadingDao getLocationReadingDao() {
        return locationReadingDao;
    }

    public AccelReadingDao getAccelReadingDao() {
        return accelReadingDao;
    }

    public BatteryReadingDao getBatteryReadingDao() {
        return batteryReadingDao;
    }

    public BeaconReadingDao getBeaconReadingDao() {
        return beaconReadingDao;
    }

    public ConnectivityReadingDao getConnectivityReadingDao() {
        return connectivityReadingDao;
    }

    public GyroReadingDao getGyroReadingDao() {
        return gyroReadingDao;
    }

    public HumidityReadingDao getHumidityReadingDao() {
        return humidityReadingDao;
    }

    public LightReadingDao getLightReadingDao() {
        return lightReadingDao;
    }

    public MagneticReadingDao getMagneticReadingDao() {
        return magneticReadingDao;
    }

    public NoiseReadingDao getNoiseReadingDao() {
        return noiseReadingDao;
    }

    public PressureReadingDao getPressureReadingDao() {
        return pressureReadingDao;
    }

    public ProximityReadingDao getProximityReadingDao() {
        return proximityReadingDao;
    }

    public TemperatureReadingDao getTemperatureReadingDao() {
        return temperatureReadingDao;
    }

    public PacketDao getPacketDao() {
        return packetDao;
    }

}
